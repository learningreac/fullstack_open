{"version":3,"sources":["services/peoples.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Filter","showFilter","handleShowChange","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumChange","onSubmit","type","Persons","personsToShow","deletePerson","console","log","map","person","name","number","onClick","Notification","message","style","color","background","fontSize","borderstyle","borderRadius","padding","marginBottom","App","useState","persons","setPersons","setNewName","setNewNum","newFilter","setFilter","setMessage","useEffect","peoplesService","initialData","regex","RegExp","length","filter","match","e","target","event","preventDefault","some","window","confirm","find","p","changedPerson","targetId","returnedPerson","catch","error","updatePerson","returnedData","concat","setTimeout","fname","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06398766.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = 'http://localhost:3001/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data)\r\n};\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data)\r\n};\r\n\r\nconst toBeDeleted = id => { // delete is a reserverd keyword\r\n   // console.log('promise',`${baseUrl}/${id}`);\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, toBeDeleted, update};","import React, { useEffect, useState } from 'react';\nimport peoplesService from './services/peoples';\n\n//must run json server to get the intial data\n\nconst Filter = ({ showFilter, handleShowChange }) => {\n  return (\n    <div>\n      <label>filter shown with:</label>\n      <input value={showFilter} onChange={handleShowChange}></input>\n    </div>\n  )\n};\n\nconst PersonForm = ({ addPerson, newName, handleNameChange, newNumber, handleNumChange }) => {\n  return (\n    <form onSubmit={addPerson}>\n      <label>Name:</label>\n      <input value={newName} onChange={handleNameChange} />\n      <br />\n      <label>Number:</label>\n      <input value={newNumber} onChange={handleNumChange} />\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n};\n\nconst Persons = ({ personsToShow, deletePerson }) => {\n  console.log('personstoshow', personsToShow);\n  return (\n    // delete person.id  \n    // delete function is passed from APP, App does not know the id. the id is a local variable, it pass to the function when call it.\n    // notice also how the event handdler is defined here to Onclick.\n    // Onclick can not be assigned directly to a function call. \n    <ul>\n      {personsToShow.map(person => {\n        return (\n          <li key={person.id}> {person.name} {person.number}\n            <button onClick={() => deletePerson(person.id)}> Delete </button>\n          </li>\n        )\n      }\n      )}\n    </ul>\n  )\n};\n\nconst Notification = ({ message }) => {\n  const messageStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderstyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  };\n\n  if (message === null) return null\n  return (\n    <div style={messageStyle}>{message}</div>\n  )\n};\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNum] = useState('');\n  const [newFilter, setFilter] = useState('');\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    /*console.log('effect');\n    axios\n      .get('http://localhost:3001/persons')\n      .then(response => setPersons(response.data)) */\n    peoplesService\n      .getAll()\n      .then(initialData => {\n        setPersons(initialData)\n      })\n  }, []);\n\n\n  const updatePerson = () => {\n    const person = persons.find(p => p.name === newName);\n    const changedPerson = { ...person, number: newNumber };\n    let targetId = person.id;\n    peoplesService\n      .update(targetId, changedPerson)\n      .then(returnedPerson => {\n        setPersons(persons.map(p => p.id !== targetId ? p : returnedPerson))\n      })\n      .catch(error => {\n        console.log('fail')\n      })\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    //console.log('button clicked', event.target);  \n    // console.log('repeated?',persons.every(person => person.name === newName)) \n    //change from array.every() to array.some\n\n    if (persons.some(person => person.name === newName)) {\n      //alert(`${newName} is already added to phonebook`);\n      if (window.confirm(`${newName} is already added to phonebook,replace the old number with new one?`)) {\n        console.log('confirms workd to be updated');\n        updatePerson();\n      }\n    } else {\n      const personObj = {\n        name: newName,\n        number: newNumber\n      };\n\n      /*axios\n        .post('http://localhost:3001/persons', personObj)\n        .then(response => {\n          setPersons(persons.concat(response.data));\n        });\n      */\n      peoplesService\n        .create(personObj)\n        .then(returnedData => {\n          setPersons(persons.concat(returnedData))\n        })\n    };\n    //setPersons(persons.concat(personObj));\n    setNewName('');\n    setNewNum('');\n    setFilter('');\n    setMessage(`Added ${newName}`);\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n\n  };\n\n  let regex = new RegExp('^' + newFilter, \"i\"); // '^' means start with that letter\n  const personsToShow = newFilter.length === 0\n    ? persons\n    : persons.filter(person => person.name.match(regex))\n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleNumChange = (e) => {\n    // console.log(typeof e.target.value);\n    setNewNum(e.target.value);\n  };\n\n  const handleShowChange = (e) => {\n    //console.log(e.target.value);\n    setFilter(e.target.value);\n  };\n\n  const deletePerson = (id) => {\n    console.log('delete', id)\n    const fname = persons.filter(p => p.id === id)[0].name;\n    if (window.confirm(`Delete ${fname}`)) {\n      setPersons(persons.filter(p => p.id !== id));\n\n      peoplesService\n        .toBeDeleted(id)\n        .then()\n\n    }\n  };\n\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <Filter showFilter={newFilter} handleShowChange={handleShowChange} />\n\n      <h2>Add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumChange={handleNumChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\n\n\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}